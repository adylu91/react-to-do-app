{"version":3,"sources":["components/Header.js","components/ActiveTasks.js","components/AddTask.js","components/FinishedTasks.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","ActiveTasks","props","display","tasksArr","map","elem","style","color","date","priority","text","length","marginBottom","fontSize","AddTask","handleAddTaskEvents","priortiy","minDate","taskText","for","type","id","name","value","min","onChange","checked","onClick","placeholder","FinishedTasks","App","event","target","console","log","setState","state","task","Date","getTime","Math","floor","random","toISOString","substr","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAUeA,G,YARA,WACb,OACE,sBAAKC,UAAU,qBAAf,UACE,yCADF,IACqB,4CC8BVC,G,MAjCK,SAACC,GACnB,IACIC,EADAC,EAAQ,YAAOF,EAAME,UA6BzB,OAZED,EADsB,KAdxBC,EAAWA,EAASC,KAAI,SAACC,GACvB,OACE,sBAAKN,UAAU,iBAAf,UACE,qBAAKO,MAAO,CAAEC,MAAO,QAArB,SAAgCF,EAAKG,QAClB,IAAlBH,EAAKI,SACJ,qBAAKH,MAAO,CAAEC,MAAO,OAArB,SAA+BF,EAAKK,OAEpC,8BAAML,EAAKK,OAEb,8BAKOC,OACD,uCAGR,gCACE,qBAAKL,MAAO,CAAEM,aAAc,OAAQC,SAAU,QAA9C,+BAEO,IACNV,KAKA,sBAAKJ,UAAU,UAAf,UAA0BG,EAA1B,SC2BMY,G,MAzDC,SAACb,GACf,IAAMc,EAAsBd,EAAMc,oBAC5BC,EAAWf,EAAMQ,SACjBQ,EAAUhB,EAAMgB,QAChBT,EAAOP,EAAMO,KACbU,EAAWjB,EAAMiB,SACvB,OACE,sBAAKnB,UAAU,0BAAf,UACE,wBAAOoB,IAAI,eAAX,0BAEE,uBACEC,KAAK,OACLC,GAAG,eACHC,KAAK,eACLC,MAAOf,EACPgB,IAAKP,EAELQ,SAAUV,OAId,wBAAOI,IAAI,mBAAX,oCAEE,uBACEC,KAAK,WACLC,GAAG,mBACHC,KAAK,mBACLI,QAASV,EACTW,QAASZ,OAIb,8BACE,wBACEhB,UAAU,cACVuB,KAAK,cACLK,QAASZ,EAHX,qBASF,gCACE,uBAAOI,IAAI,eAAX,uCACA,uBACEC,KAAK,OACLE,KAAK,eACLD,GAAG,eACHO,YAAY,mCACZH,SAAUV,EACVQ,MAAOL,YChDFW,EAJO,WACpB,OAAO,qBAAK9B,UAAU,UAAf,6BC4FM+B,E,kDArFb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAmBRc,oBAAsB,SAACgB,GAoBrB,GAnB0B,iBAAtBA,EAAMC,OAAOV,OACfW,QAAQC,IAAIH,EAAMC,OAAOT,OACzB,EAAKY,SAAS,CACZjB,SAAUa,EAAMC,OAAOT,SAID,iBAAtBQ,EAAMC,OAAOV,MACf,EAAKa,SAAS,CACZ3B,KAAMuB,EAAMC,OAAOT,QAIG,qBAAtBQ,EAAMC,OAAOV,MACf,EAAKa,SAAS,CACZ1B,UAAW,EAAK2B,MAAM3B,WAIA,gBAAtBsB,EAAMC,OAAOV,KAAwB,CACvCW,QAAQC,IAAI,eACZ,IAAMG,EAAO,CACXhB,GAAI,GACJb,KAAM,GACNC,UAAU,EACVC,KAAM,IAGR2B,EAAKhB,IACI,IAAIiB,MAAOC,UAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGhDL,EAAK7B,KAAO,EAAK4B,MAAM5B,KACvB6B,EAAK5B,SAAW,EAAK2B,MAAM3B,SAC3B4B,EAAK3B,KAAO,EAAK0B,MAAMlB,SAEvB,EAAKiB,SAAS,CACZhC,SAAS,GAAD,mBAAM,EAAKiC,MAAMjC,UAAjB,CAA2BkC,IACnC5B,UAAU,EACVS,SAAU,GACVV,KAAM,EAAK4B,MAAMnB,YA3DrB,EAAKmB,MAAQ,CACXjC,SAAU,GACVK,KAAM,GACNC,UAAU,EACVS,SAAU,GACVD,QAAS,IAPM,E,gEAYjB,IAAIT,EAAO,IAAI8B,KACf9B,EAAOA,EAAKmC,cAAcC,OAAO,EAAG,IACpCC,KAAKV,SAAS,CACZ3B,KAAMA,EACNS,QAAST,M,+BAkDH,IAAD,EACuCqC,KAAKT,MAA3C5B,EADD,EACCA,KAAMC,EADP,EACOA,SAAUS,EADjB,EACiBA,SAAUD,EAD3B,EAC2BA,QAClC,OACE,sBAAKlB,UAAU,aAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEgB,oBAAqB8B,KAAK9B,oBAC1BP,KAAMA,EACNC,SAAUA,EACVS,SAAUA,EACVD,QAASA,IAEX,cAAC,EAAD,CAAad,SAAU0C,KAAKT,MAAMjC,WAClC,cAAC,EAAD,W,GAhFU2C,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7642a731.chunk.js","sourcesContent":["import \"./css/Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"headerLogo section\">\r\n      <span>ToDo </span> <span>App</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./css/ActiveTasks.css\";\r\n\r\nconst ActiveTasks = (props) => {\r\n  let tasksArr = [...props.tasksArr];\r\n  let display;\r\n  tasksArr = tasksArr.map((elem) => {\r\n    return (\r\n      <div className=\"eachActiveTask\">\r\n        <div style={{ color: \"grey\" }}>{elem.date}</div>\r\n        {elem.priority === true ? (\r\n          <div style={{ color: \"red\" }}>{elem.text}</div>\r\n        ) : (\r\n          <div>{elem.text}</div>\r\n        )}\r\n        <hr />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  if (tasksArr.length === 0) {\r\n    display = \"Brak zadań do wyświetlenia\";\r\n  } else {\r\n    display = (\r\n      <div>\r\n        <div style={{ marginBottom: \"10px\", fontSize: \"24px\" }}>\r\n          Lista zadań:\r\n        </div>{\" \"}\r\n        {tasksArr}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div className=\"section\">{display} </div>;\r\n};\r\n\r\nexport default ActiveTasks;\r\n","import \"./css/AddTask.css\";\r\n\r\nconst AddTask = (props) => {\r\n  const handleAddTaskEvents = props.handleAddTaskEvents;\r\n  const priortiy = props.priority;\r\n  const minDate = props.minDate;\r\n  const date = props.date;\r\n  const taskText = props.taskText;\r\n  return (\r\n    <div className=\"addTask_Wrapper section\">\r\n      <label for=\"addTask_Task\">\r\n        Data zadania:\r\n        <input\r\n          type=\"date\"\r\n          id=\"addTask_Date\"\r\n          name=\"addTask_Date\"\r\n          value={date}\r\n          min={minDate}\r\n          // max=\"2018-12-31\"\r\n          onChange={handleAddTaskEvents}\r\n        ></input>\r\n      </label>\r\n\r\n      <label for=\"addTask_Priority\">\r\n        Dodaj wysoki priorytet:\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"addTask_Priority\"\r\n          name=\"addTask_Priority\"\r\n          checked={priortiy}\r\n          onClick={handleAddTaskEvents}\r\n        ></input>\r\n      </label>\r\n\r\n      <div>\r\n        <button\r\n          className=\"addTask_Btn\"\r\n          name=\"addTask_Btn\"\r\n          onClick={handleAddTaskEvents}\r\n        >\r\n          Dodaj\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"addTask_Text\"> Treść zadania:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"addTask_Text\"\r\n          id=\"addTask_Text\"\r\n          placeholder=\"Wpisz treść zadania...\"\r\n          onChange={handleAddTaskEvents}\r\n          value={taskText}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","const FinishedTasks = () => {\r\n  return <div className=\"section\">finished tasks</div>;\r\n};\r\n\r\nexport default FinishedTasks;\r\n","import React, { Component } from \"react\";\nimport \"./css/App.css\";\nimport Header from \"./Header.js\";\nimport ActiveTasks from \"./ActiveTasks.js\";\nimport AddTask from \"./AddTask\";\nimport FinishedTasks from \"./FinishedTasks\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasksArr: [],\n      date: \"\",\n      priority: false,\n      taskText: \"\",\n      minDate: \"\",\n    };\n  }\n\n  componentDidMount() {\n    let date = new Date();\n    date = date.toISOString().substr(0, 10);\n    this.setState({\n      date: date,\n      minDate: date,\n    });\n  }\n\n  handleAddTaskEvents = (event) => {\n    if (event.target.name === \"addTask_Text\") {\n      console.log(event.target.value);\n      this.setState({\n        taskText: event.target.value,\n      });\n    }\n\n    if (event.target.name === \"addTask_Date\") {\n      this.setState({\n        date: event.target.value,\n      });\n    }\n\n    if (event.target.name === \"addTask_Priority\") {\n      this.setState({\n        priority: !this.state.priority,\n      });\n    }\n\n    if (event.target.name === \"addTask_Btn\") {\n      console.log(\"click click\");\n      const task = {\n        id: \"\",\n        date: \"\",\n        priority: false,\n        text: \"\",\n      };\n\n      task.id = (function () {\n        return new Date().getTime() + Math.floor(Math.random() * 1000);\n      })();\n\n      task.date = this.state.date;\n      task.priority = this.state.priority;\n      task.text = this.state.taskText;\n\n      this.setState({\n        tasksArr: [...this.state.tasksArr, task],\n        priority: false,\n        taskText: \"\",\n        date: this.state.minDate,\n      });\n    }\n  };\n\n  render() {\n    const { date, priority, taskText, minDate } = this.state;\n    return (\n      <div className=\"appWrapper\">\n        <Header />\n        <AddTask\n          handleAddTaskEvents={this.handleAddTaskEvents}\n          date={date}\n          priority={priority}\n          taskText={taskText}\n          minDate={minDate}\n        />\n        <ActiveTasks tasksArr={this.state.tasksArr} />\n        <FinishedTasks />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}